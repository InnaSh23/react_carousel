{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","indexImage","setIndexImage","handleNext","useCallback","currentImage","newIndex","remainingImages","length","handlePrev","useEffect","interval","setInterval","clearInterval","className","style","width","overflow","margin","map","image","index","transform","transition","src","alt","height","type","onClick","App","state","this","value","onChange","e","newValue","Number","target","setState","marginTop","newStep","newAnime","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5730bcb1.chunk.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frameSize: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [indexImage, setIndexImage] = useState<number>(0);\n\n  const handleNext = useCallback(() => {\n    setIndexImage((currentImage) => {\n      const newIndex = currentImage + step;\n      const remainingImages = images.length - newIndex;\n\n      if (infinite) {\n        return newIndex % images.length;\n      }\n\n      if (remainingImages >= frameSize) {\n        return newIndex;\n      }\n\n      return remainingImages > 0 ? currentImage + 1 : 0;\n    });\n  }, [infinite, setIndexImage, step, images, frameSize]);\n\n  const handlePrev = useCallback(() => {\n    setIndexImage((currentImage) => {\n      const newIndex = currentImage - step;\n\n      if (infinite) {\n        return (newIndex + images.length) % images.length;\n      }\n\n      return newIndex < 0 ? images.length - frameSize : newIndex;\n    });\n  }, [infinite, setIndexImage, step, images, frameSize]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      handleNext();\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [handleNext, images]);\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrapper\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          overflow: 'hidden',\n          margin: '0 auto',\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(-${indexImage * itemWidth}px)`,\n                transition: `transform ${animationDuration}ms ease-in-out`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index}`}\n                style={{\n                  height: `${itemWidth}`,\n                  width: `${itemWidth}`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__container-buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrev}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleNext}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const changeWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(e.target.value);\n\n      this.setState({ itemWidth: newValue });\n    };\n\n    const changeFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(e.target.value);\n\n      this.setState({ frameSize: newValue });\n    };\n\n    const changeStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newStep = Number(e.target.value);\n\n      this.setState({ step: newStep });\n    };\n\n    const changeAnimation = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newAnime = Number(e.target.value);\n\n      this.setState({ animationDuration: newAnime });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"App__labels\">\n          <label className=\"App__input\">\n            Item Width:\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={changeWidth}\n              style={{\n                marginTop: '10px',\n              }}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            Frame Size:\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={changeFrameSize}\n              style={{\n                marginTop: '10px',\n              }}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            Step:\n            <input\n              type=\"number\"\n              value={step}\n              onChange={changeStep}\n              style={{\n                marginTop: '10px',\n              }}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            Animation Duration:\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={changeAnimation}\n              style={{\n                marginTop: '10px',\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}